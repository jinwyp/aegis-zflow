akka {
  actor {
    serializers {
      flowSerializer  = "com.yimei.zflow.api.serialization.json.FlowSerialization"
      utaskSerializer = "com.yimei.zflow.api.serialization.json.UTaskSerialization"
      gtaskSerializer = "com.yimei.zflow.api.serialization.json.GTaskSerialization"
    }
    serilization-bindings {
      // flow
      "com.yimei.zflow.api.models.flow.PointUpdated"    = flowSerializer
      "com.yimei.zflow.api.models.flow.PointsUpdated"   = flowSerializer
      "com.yimei.zflow.api.models.flow.DecisionUpdated" = flowSerializer
      "com.yimei.zflow.api.models.flow.Hijacked"        = flowSerializer
      "com.yimei.zflow.api.models.flow.EdgeCompleted"   = flowSerializer

      // gtask
      "com.yimei.zflow.api.models.gtask.TaskDequeue"      = gtaskSerializer
      "com.yimei.zflow.api.models.gtask.TaskEnqueue"      = gtaskSerializer
      "com.yimei.zflow.api.models.gtask.CommandGroupTask" = gtaskSerializer

      // utask
      "com.yimei.zflow.api.models.utask.TaskDequeue"     = utaskSerializer
      "com.yimei.zflow.api.models.utask.TaskEnqueue"     = utaskSerializer
      "com.yimei.zflow.api.models.utask.CommandUserTask" = utaskSerializer
    }
  }

}